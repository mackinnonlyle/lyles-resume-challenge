AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  lyles-resume-challenge

  Sample SAM Template for lyles-resume-challenge

# More info about Globals: https://github.com/awslabs/serverless-application-model/blob/master/docs/globals.rst
Globals:
  Function:
    Timeout: 3
    MemorySize: 128

Resources:

  MyWebsite:
    Type: AWS::S3::Bucket
    Properties:
      AccessControl: PublicRead
      WebsiteConfiguration:
        IndexDocument: index.html
      BucketName: lyles-resume-challenge

  BucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      PolicyDocument:
        Id: MyPolicy
        Version: 2012-10-17
        Statement:
          - Sid: PublicReadForGetBucketObjects
            Effect: Allow
            Principal: "*"
            Action: "s3:GetObject"
            Resource: !Join
              - ""
              - - "arn:aws:s3:::"
                - !Ref MyWebsite
                - /*
      Bucket: !Ref MyWebsite


  MyDistribution:
    Type: "AWS::CloudFront::Distribution"
    Properties:
      DistributionConfig:

        ViewerCertificate:
            AcmCertificateArn: !Ref MyCertificate
            SslSupportMethod: sni-only

        Aliases:
            - challenge.lylemackinnon.com




        DefaultCacheBehavior:
          ViewerProtocolPolicy: allow-all
          TargetOriginId: lyles-resume-challenge.s3.us-east-1.amazonaws.com
          DefaultTTL: 0
          MinTTL: 0
          MaxTTL: 0
          ForwardedValues:
            QueryString: false
        Origins:
          - DomainName: lyles-resume-challenge.s3.us-east-1.amazonaws.com
            Id: lyles-resume-challenge.s3.us-east-1.amazonaws.com
            CustomOriginConfig:
              OriginProtocolPolicy: match-viewer
        Enabled: "true"
        DefaultRootObject: index.html



  MyRoute53Record:
    Type: "AWS::Route53::RecordSetGroup"
    Properties:
      HostedZoneId: Z00882183LTKWQTNEVG0Z
      RecordSets:
        - Name: challenge.lylemackinnon.com
          Type: A
          AliasTarget:
            HostedZoneId: Z2FDTNDATAQYW2
            DNSName: !GetAtt MyDistribution.DomainName


  MyCertificate:
    Type: AWS::CertificateManager::Certificate
    Properties:
      DomainName: challenge.lylemackinnon.com
      ValidationMethod: DNS




  CounterDynamoDBTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: lyles-resume-challenge
      BillingMode: PAY_PER_REQUEST
      AttributeDefinitions:
        - AttributeName: "ID"
          AttributeType: "S"
      KeySchema:
        - AttributeName: "ID"
          KeyType: "HASH"

  CounterLambdaFunction:
    Type: AWS::Serverless::Function
    Properties:
      Policies:
        - DynamoDBCrudPolicy:
            TableName: lyles-resume-challenge
      CodeUri: lyles-resume-challenge/
      Handler: app.lambda_handler
      Runtime: python3.9
      Architectures:
        - x86_64
      Events:
        Visits:
          Type: Api
          Properties:
            Path: /visit
            Method: post

Outputs:
  CounterLambdaFunctionApi:
    Description: "API Gateway endpoint URL for Prod stage for CounterLambdaFunction"
    Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/hello/"
  CounterLambdaFunction:
    Description: "CounterLambdaFunction ARN"
    Value: !GetAtt CounterLambdaFunction.Arn
  CounterLambdaFunctionIamRole:
    Description: "Implicit IAM Role created for CounterLambdaFunction"
    Value: !GetAtt CounterLambdaFunction.Arn
